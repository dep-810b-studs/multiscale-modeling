{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "id": "xLjz5cJ9Vdw5"
   },
   "outputs": [],
   "source": [
    "import sys\n",
    "import functools\n",
    "import numpy as np\n",
    "import tensorflow as tf\n",
    "import pandas as pd\n",
    "import tensorflow.keras as keras\n",
    "\n",
    "from matplotlib import pyplot as plt\n",
    "from mpl_toolkits.mplot3d import axes3d\n",
    "\n",
    "from matplotlib import cm\n",
    "from matplotlib.ticker import LinearLocator, FormatStrFormatter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "XG9tOs4xVtPn",
    "outputId": "5d97bcd9-0b6c-450d-d0ab-7179e0a68699"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     R    x    y      T             L     kappa  kappa_bulk\n",
      "0  0.0  1.0  2.0  300.0  1.000000e-09  0.363625    0.017300\n",
      "1  0.0  1.0  2.0  300.0  1.258930e-09  0.436058    0.020746\n",
      "2  0.0  1.0  2.0  300.0  1.584890e-09  0.519849    0.024733\n",
      "3  0.0  1.0  2.0  300.0  1.995260e-09  0.616000    0.029308\n",
      "4  0.0  1.0  2.0  300.0  2.511890e-09  0.725475    0.034516\n"
     ]
    }
   ],
   "source": [
    "seed = int(42)\n",
    "\n",
    "FLOAT = np.float32\n",
    "LABEL_COLUMN = 'kappa_bulk'\n",
    "SELECT_COLUMNS = ['R','x','y','T','L','kappa']\n",
    "DEFAULTS = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n",
    "TRAIN = 0.6\n",
    "VALIDATE = 0.2\n",
    "EPOCHS = 10000\n",
    "SAMPLING_RANDOM_SEED = seed#4\n",
    "EARLY_STOP_PATIENCE = 15\n",
    "assert(TRAIN + VALIDATE <= 1.0)\n",
    "\n",
    "dataset = pd.read_csv(\"kappa.csv\",\\\n",
    "    dtype={'R':FLOAT, 'x':FLOAT, 'y':FLOAT, 'T':FLOAT, 'L':FLOAT, 'kappa':FLOAT, 'kappa_bulk':FLOAT})\n",
    "dataset_sample = dataset.sample(frac=1, random_state=SAMPLING_RANDOM_SEED).reset_index(drop=True)\n",
    "print(dataset.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 9639 entries, 0 to 9638\n",
      "Data columns (total 7 columns):\n",
      " #   Column      Non-Null Count  Dtype  \n",
      "---  ------      --------------  -----  \n",
      " 0   R           9639 non-null   float32\n",
      " 1   x           9639 non-null   float32\n",
      " 2   y           9639 non-null   float32\n",
      " 3   T           9639 non-null   float32\n",
      " 4   L           9639 non-null   float32\n",
      " 5   kappa       9639 non-null   float32\n",
      " 6   kappa_bulk  9639 non-null   float32\n",
      "dtypes: float32(7)\n",
      "memory usage: 263.7 KB\n"
     ]
    }
   ],
   "source": [
    "dataset.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "columns = list(dataset.columns)\n",
    "\n",
    "y = dataset['kappa_bulk']\n",
    "y = y.values.reshape(-1,1)\n",
    "\n",
    "del dataset['kappa_bulk']\n",
    "X = dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1080 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def plot_functions(X, y):\n",
    "    \"\"\"\n",
    "    X shape must be (,6)\n",
    "    y shape must be columns vector\n",
    "    X.shape[0] == y.shape\n",
    "    \"\"\"\n",
    "    fig, axs = plt.subplots(nrows=3, ncols=2, figsize = (15,15))\n",
    "\n",
    "    for i in range(len(columns) - 1):\n",
    "        x_label = columns[i]\n",
    "        row = int(i/2)\n",
    "        col = int(i%2)\n",
    "        axs[row, col].plot(X[x_label],y)\n",
    "        axs[row, col].set_xlabel(x_label)\n",
    "        axs[row, col].set_ylabel(LABEL_COLUMN)\n",
    "        axs[row, col].grid(True)\n",
    "\n",
    "plot_functions(X, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x648 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def plot_3d(X, Y, z, X_label, Y_label, z_label, maxlen=1000):\n",
    "    fancy = False\n",
    "\n",
    "    if X.shape[0] > maxlen:\n",
    "        indicies = np.sort( np.random.randint(0, X.shape[0], size=maxlen))\n",
    "        fancy = True\n",
    "    \n",
    "    fig = plt.figure(figsize=(13,9))\n",
    "    ax = fig.gca(projection='3d')\n",
    "\n",
    "    if fancy:\n",
    "        surf = ax.plot_surface(X[indicies], \n",
    "                               Y[indicies], \n",
    "                               z[indicies], \n",
    "                               cmap=cm.coolwarm,\n",
    "                               linewidth=0, \n",
    "                               antialiased=False)\n",
    "    else:\n",
    "        surf = ax.plot_surface(X, Y, z, cmap=cm.coolwarm,\n",
    "                       linewidth=0, antialiased=False)\n",
    "\n",
    "    fig.colorbar(surf, shrink=0.5, aspect=5)\n",
    "    ax.set_xlabel(X_label, fontsize=14)\n",
    "    ax.set_ylabel(Y_label, fontsize=14)\n",
    "    ax.set_zlabel(z_label, fontsize=14)\n",
    "\n",
    "idx1 = 1\n",
    "idx2 = 3\n",
    "plot_3d(X[columns[idx1]], X[columns[idx2]], y, columns[idx1], columns[idx2],  LABEL_COLUMN)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "def build_model(count_layers, neurons_in_layer, activation = 'relu', optimizer = tf.keras.optimizers.RMSprop(0.0001)):\n",
    "    model = keras.Sequential()\n",
    "    model.add(keras.layers.Dense(neurons_in_layer, activation=activation, input_shape=(len(train_dataset.keys()),)))\n",
    "    for i in range(1, count_layers):\n",
    "        model.add(keras.layers.Dense(neurons_in_layer, activation=activation))\n",
    "        model.add(keras.layers.Dropout(0.6))\n",
    "    model.add(keras.layers.Dense(1))\n",
    "    model.compile(loss='mse', optimizer=optimizer, metrics=['mae', 'mse'])\n",
    "    return model\n",
    "\n",
    "def norm(x):\n",
    "    return (x - mean) / std"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0       0.0\n",
      "1       0.0\n",
      "2       0.0\n",
      "3       0.0\n",
      "4       0.0\n",
      "       ... \n",
      "7706    0.1\n",
      "7707    0.1\n",
      "7708    0.1\n",
      "7709    0.1\n",
      "7710    0.1\n",
      "Name: R, Length: 7711, dtype: float32\n",
      "R      0.100000\n",
      "x      2.759305\n",
      "y      2.601867\n",
      "T    271.488770\n",
      "L      0.000010\n",
      "Name: mean, dtype: float32\n"
     ]
    }
   ],
   "source": [
    "total_len = len(dataset.index)\n",
    "train_validate_len = int(total_len * (TRAIN + VALIDATE))\n",
    "test_len = total_len - train_validate_len\n",
    "\n",
    "train_dataset = dataset.head(train_validate_len)\n",
    "test_dataset = dataset.tail(test_len)\n",
    "\n",
    "train_stats = train_dataset.describe()\n",
    "train_stats.pop(\"kappa\")\n",
    "train_stats = train_stats.transpose()\n",
    "\n",
    "train_labels = train_dataset.pop('kappa')\n",
    "test_labels = test_dataset.pop('kappa')\n",
    "\n",
    "print(train_dataset['R'])\n",
    "mean = train_stats['mean'].astype(FLOAT)\n",
    "std = train_stats['std'].astype(FLOAT)\n",
    "print(mean)\n",
    "\n",
    "\n",
    "normed_train_data = norm(train_dataset)\n",
    "normed_test_data = norm(test_dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "6Q8LL4FaVtTd",
    "outputId": "6322b17d-19f8-4062-989a-e1d4b5bb2145"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_14\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_60 (Dense)             (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_61 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_32 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_62 (Dense)             (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 85\n",
      "Trainable params: 85\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_15\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_63 (Dense)             (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_64 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_33 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_65 (Dense)             (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 85\n",
      "Trainable params: 85\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_16\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_66 (Dense)             (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_67 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_34 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_68 (Dense)             (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 85\n",
      "Trainable params: 85\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_17\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_69 (Dense)             (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_70 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_35 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_71 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_36 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_72 (Dense)             (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 127\n",
      "Trainable params: 127\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_18\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_73 (Dense)             (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_74 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_37 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_75 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_38 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_76 (Dense)             (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 127\n",
      "Trainable params: 127\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_19\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_77 (Dense)             (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_78 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_39 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_79 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_40 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_80 (Dense)             (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 127\n",
      "Trainable params: 127\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_20\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_81 (Dense)             (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_82 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_41 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_83 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_42 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_84 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_43 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_85 (Dense)             (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 169\n",
      "Trainable params: 169\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_21\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_86 (Dense)             (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_87 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_44 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_88 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_45 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_89 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_46 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_90 (Dense)             (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 169\n",
      "Trainable params: 169\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_22\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_91 (Dense)             (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_92 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_47 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_93 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_48 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_94 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_49 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_95 (Dense)             (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 169\n",
      "Trainable params: 169\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_23\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_96 (Dense)             (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_97 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_50 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_98 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_51 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_99 (Dense)             (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_52 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_100 (Dense)            (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_53 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_101 (Dense)            (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 211\n",
      "Trainable params: 211\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_24\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_102 (Dense)            (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_103 (Dense)            (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_54 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_104 (Dense)            (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_55 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_105 (Dense)            (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_56 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_106 (Dense)            (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_57 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_107 (Dense)            (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 211\n",
      "Trainable params: 211\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_25\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_108 (Dense)            (None, 6)                 36        \n",
      "_________________________________________________________________\n",
      "dense_109 (Dense)            (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_58 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_110 (Dense)            (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_59 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_111 (Dense)            (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_60 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_112 (Dense)            (None, 6)                 42        \n",
      "_________________________________________________________________\n",
      "dropout_61 (Dropout)         (None, 6)                 0         \n",
      "_________________________________________________________________\n",
      "dense_113 (Dense)            (None, 1)                 7         \n",
      "=================================================================\n",
      "Total params: 211\n",
      "Trainable params: 211\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_26\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_114 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_115 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_62 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_116 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 129\n",
      "Trainable params: 129\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_27\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_117 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_118 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_63 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_119 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 129\n",
      "Trainable params: 129\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_28\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_120 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_121 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_64 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_122 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 129\n",
      "Trainable params: 129\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_29\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_123 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_124 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_65 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_125 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_66 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_126 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 201\n",
      "Trainable params: 201\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_30\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_127 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_128 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_67 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_129 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_68 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_130 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 201\n",
      "Trainable params: 201\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_31\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_131 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_132 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_69 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_133 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_70 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_134 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 201\n",
      "Trainable params: 201\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_32\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_135 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_136 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_71 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_137 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_72 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_138 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_73 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_139 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 273\n",
      "Trainable params: 273\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_33\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_140 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_141 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_74 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_142 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_75 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_143 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_76 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_144 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 273\n",
      "Trainable params: 273\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_34\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_145 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_146 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_77 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_147 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_78 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_148 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_79 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_149 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 273\n",
      "Trainable params: 273\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_35\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_150 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_151 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_80 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_152 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_81 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_153 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_82 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_154 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_83 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_155 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 345\n",
      "Trainable params: 345\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_36\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_156 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_157 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_84 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_158 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_85 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_159 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_86 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_160 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_87 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_161 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 345\n",
      "Trainable params: 345\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_37\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_162 (Dense)            (None, 8)                 48        \n",
      "_________________________________________________________________\n",
      "dense_163 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_88 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_164 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_89 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_165 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_90 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_166 (Dense)            (None, 8)                 72        \n",
      "_________________________________________________________________\n",
      "dropout_91 (Dropout)         (None, 8)                 0         \n",
      "_________________________________________________________________\n",
      "dense_167 (Dense)            (None, 1)                 9         \n",
      "=================================================================\n",
      "Total params: 345\n",
      "Trainable params: 345\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_38\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_168 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_169 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_92 (Dropout)         (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_170 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 181\n",
      "Trainable params: 181\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_39\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_171 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_172 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_93 (Dropout)         (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_173 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 181\n",
      "Trainable params: 181\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_40\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_174 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_175 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_94 (Dropout)         (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_176 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 181\n",
      "Trainable params: 181\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_41\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_177 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_178 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_95 (Dropout)         (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_179 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_96 (Dropout)         (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_180 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 291\n",
      "Trainable params: 291\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_42\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_181 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_182 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_97 (Dropout)         (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_183 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_98 (Dropout)         (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_184 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 291\n",
      "Trainable params: 291\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_43\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_185 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_186 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_99 (Dropout)         (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_187 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_100 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_188 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 291\n",
      "Trainable params: 291\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_44\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_189 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_190 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_101 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_191 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_102 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_192 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_103 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_193 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 401\n",
      "Trainable params: 401\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_45\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_194 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_195 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_104 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_196 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_105 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_197 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_106 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_198 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 401\n",
      "Trainable params: 401\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_46\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_199 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_200 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_107 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_201 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_108 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_202 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_109 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_203 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 401\n",
      "Trainable params: 401\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_47\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_204 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_205 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_110 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_206 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_111 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_207 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_112 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_208 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_113 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_209 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 511\n",
      "Trainable params: 511\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_48\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_210 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_211 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_114 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_212 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_115 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_213 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_116 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_214 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_117 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_215 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 511\n",
      "Trainable params: 511\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_49\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_216 (Dense)            (None, 10)                60        \n",
      "_________________________________________________________________\n",
      "dense_217 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_118 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_218 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_119 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_219 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_120 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_220 (Dense)            (None, 10)                110       \n",
      "_________________________________________________________________\n",
      "dropout_121 (Dropout)        (None, 10)                0         \n",
      "_________________________________________________________________\n",
      "dense_221 (Dense)            (None, 1)                 11        \n",
      "=================================================================\n",
      "Total params: 511\n",
      "Trainable params: 511\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_50\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_222 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_223 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_122 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_224 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 241\n",
      "Trainable params: 241\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_51\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_225 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_226 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_123 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_227 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 241\n",
      "Trainable params: 241\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_52\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_228 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_229 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_124 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_230 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 241\n",
      "Trainable params: 241\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_53\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_231 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_232 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_125 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_233 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_126 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_234 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 397\n",
      "Trainable params: 397\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_54\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_235 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_236 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_127 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_237 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_128 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_238 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 397\n",
      "Trainable params: 397\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_55\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_239 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_240 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_129 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_241 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_130 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_242 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 397\n",
      "Trainable params: 397\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_56\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_243 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_244 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_131 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_245 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_132 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_246 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_133 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_247 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 553\n",
      "Trainable params: 553\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_57\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_248 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_249 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_134 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_250 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_135 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_251 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_136 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_252 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 553\n",
      "Trainable params: 553\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_58\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_253 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_254 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_137 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_255 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_138 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_256 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_139 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_257 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 553\n",
      "Trainable params: 553\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_59\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_258 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_259 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_140 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_260 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_141 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_261 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_142 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_262 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_143 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_263 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 709\n",
      "Trainable params: 709\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_60\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_264 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_265 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_144 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_266 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_145 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_267 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_146 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_268 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_147 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_269 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 709\n",
      "Trainable params: 709\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_61\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_270 (Dense)            (None, 12)                72        \n",
      "_________________________________________________________________\n",
      "dense_271 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_148 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_272 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_149 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_273 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_150 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_274 (Dense)            (None, 12)                156       \n",
      "_________________________________________________________________\n",
      "dropout_151 (Dropout)        (None, 12)                0         \n",
      "_________________________________________________________________\n",
      "dense_275 (Dense)            (None, 1)                 13        \n",
      "=================================================================\n",
      "Total params: 709\n",
      "Trainable params: 709\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_62\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_276 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_277 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_152 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_278 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 309\n",
      "Trainable params: 309\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_63\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_279 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_280 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_153 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_281 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 309\n",
      "Trainable params: 309\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_64\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_282 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_283 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_154 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_284 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 309\n",
      "Trainable params: 309\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_65\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_285 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_286 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_155 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_287 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_156 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_288 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 519\n",
      "Trainable params: 519\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_66\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_289 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_290 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_157 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_291 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_158 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_292 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 519\n",
      "Trainable params: 519\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_67\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_293 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_294 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_159 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_295 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_160 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_296 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 519\n",
      "Trainable params: 519\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_68\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_297 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_298 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_161 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_299 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_162 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_300 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_163 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_301 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 729\n",
      "Trainable params: 729\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_69\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_302 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_303 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_164 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_304 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_165 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_305 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_166 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_306 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 729\n",
      "Trainable params: 729\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_70\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_307 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_308 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_167 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_309 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_168 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_310 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_169 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_311 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 729\n",
      "Trainable params: 729\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_71\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_312 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_313 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_170 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_314 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_171 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_315 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_172 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_316 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_173 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_317 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 939\n",
      "Trainable params: 939\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_72\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_318 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_319 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_174 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_320 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_175 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_321 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_176 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_322 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_177 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_323 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 939\n",
      "Trainable params: 939\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_73\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_324 (Dense)            (None, 14)                84        \n",
      "_________________________________________________________________\n",
      "dense_325 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_178 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_326 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_179 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_327 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_180 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_328 (Dense)            (None, 14)                210       \n",
      "_________________________________________________________________\n",
      "dropout_181 (Dropout)        (None, 14)                0         \n",
      "_________________________________________________________________\n",
      "dense_329 (Dense)            (None, 1)                 15        \n",
      "=================================================================\n",
      "Total params: 939\n",
      "Trainable params: 939\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_74\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_330 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_331 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_182 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_332 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 385\n",
      "Trainable params: 385\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_75\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_333 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_334 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_183 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_335 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 385\n",
      "Trainable params: 385\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_76\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_336 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_337 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_184 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_338 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 385\n",
      "Trainable params: 385\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_77\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_339 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_340 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_185 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_341 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_186 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_342 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 657\n",
      "Trainable params: 657\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_78\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_343 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_344 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_187 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_345 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_188 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_346 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 657\n",
      "Trainable params: 657\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_79\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_347 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_348 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_189 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_349 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_190 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_350 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 657\n",
      "Trainable params: 657\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_80\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_351 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_352 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_191 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_353 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_192 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_354 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_193 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_355 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 929\n",
      "Trainable params: 929\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_81\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_356 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_357 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_194 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_358 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_195 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_359 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_196 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_360 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 929\n",
      "Trainable params: 929\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_82\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_361 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_362 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_197 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_363 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_198 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_364 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_199 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_365 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 929\n",
      "Trainable params: 929\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_83\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_366 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_367 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_200 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_368 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_201 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_369 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_202 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_370 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_203 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_371 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 1,201\n",
      "Trainable params: 1,201\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_84\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_372 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_373 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_204 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_374 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_205 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_375 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_206 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_376 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_207 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_377 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 1,201\n",
      "Trainable params: 1,201\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_85\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_378 (Dense)            (None, 16)                96        \n",
      "_________________________________________________________________\n",
      "dense_379 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_208 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_380 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_209 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_381 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_210 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_382 (Dense)            (None, 16)                272       \n",
      "_________________________________________________________________\n",
      "dropout_211 (Dropout)        (None, 16)                0         \n",
      "_________________________________________________________________\n",
      "dense_383 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 1,201\n",
      "Trainable params: 1,201\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_86\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_384 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_385 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_212 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_386 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 469\n",
      "Trainable params: 469\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_87\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_387 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_388 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_213 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_389 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 469\n",
      "Trainable params: 469\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_88\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_390 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_391 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_214 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_392 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 469\n",
      "Trainable params: 469\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_89\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_393 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_394 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_215 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_395 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_216 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_396 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 811\n",
      "Trainable params: 811\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_90\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_397 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_398 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_217 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_399 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_218 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_400 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 811\n",
      "Trainable params: 811\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_91\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_401 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_402 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_219 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_403 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_220 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_404 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 811\n",
      "Trainable params: 811\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_92\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_405 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_406 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_221 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_407 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_222 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_408 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_223 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_409 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 1,153\n",
      "Trainable params: 1,153\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_93\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_410 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_411 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_224 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_412 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_225 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_413 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_226 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_414 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 1,153\n",
      "Trainable params: 1,153\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_94\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_415 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_416 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_227 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_417 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_228 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_418 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_229 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_419 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 1,153\n",
      "Trainable params: 1,153\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Evaluation passed\n",
      "Model: \"sequential_95\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_420 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_421 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_230 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_422 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_231 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_423 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_232 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_424 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_233 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_425 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 1,495\n",
      "Trainable params: 1,495\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_96\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_426 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_427 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_234 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_428 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_235 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_429 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_236 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_430 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_237 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_431 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 1,495\n",
      "Trainable params: 1,495\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_97\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_432 (Dense)            (None, 18)                108       \n",
      "_________________________________________________________________\n",
      "dense_433 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_238 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_434 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_239 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_435 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_240 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_436 (Dense)            (None, 18)                342       \n",
      "_________________________________________________________________\n",
      "dropout_241 (Dropout)        (None, 18)                0         \n",
      "_________________________________________________________________\n",
      "dense_437 (Dense)            (None, 1)                 19        \n",
      "=================================================================\n",
      "Total params: 1,495\n",
      "Trainable params: 1,495\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_98\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_438 (Dense)            (None, 20)                120       \n",
      "_________________________________________________________________\n",
      "dense_439 (Dense)            (None, 20)                420       \n",
      "_________________________________________________________________\n",
      "dropout_242 (Dropout)        (None, 20)                0         \n",
      "_________________________________________________________________\n",
      "dense_440 (Dense)            (None, 1)                 21        \n",
      "=================================================================\n",
      "Total params: 561\n",
      "Trainable params: 561\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n",
      "Evaluation passed\n",
      "Model: \"sequential_99\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_441 (Dense)            (None, 20)                120       \n",
      "_________________________________________________________________\n",
      "dense_442 (Dense)            (None, 20)                420       \n",
      "_________________________________________________________________\n",
      "dropout_243 (Dropout)        (None, 20)                0         \n",
      "_________________________________________________________________\n",
      "dense_443 (Dense)            (None, 1)                 21        \n",
      "=================================================================\n",
      "Total params: 561\n",
      "Trainable params: 561\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "None\n",
      "In progress...\n"
     ]
    }
   ],
   "source": [
    "results = []\n",
    "\n",
    "for nn in [6, 8, 10, 12, 14, 16, 18, 20]:\n",
    "    for l in [2, 3, 4, 5]:\n",
    "        for a in ['relu', 'sigmoid', 'tanh']:\n",
    "            model = build_model(l, nn, activation=a)\n",
    "            name = 'model_%s_%d_%d' % (a, l, nn,)\n",
    "            print(model.summary())\n",
    "            print(\"In progress...\")\n",
    "\n",
    "            early_stop = keras.callbacks.EarlyStopping(monitor='val_loss', patience=EARLY_STOP_PATIENCE)\n",
    "\n",
    "            history = model.fit(\n",
    "                normed_train_data, train_labels,\n",
    "                batch_size=32,\n",
    "                epochs=EPOCHS, validation_split=VALIDATE, verbose=0,\n",
    "                callbacks=[early_stop])\n",
    "            print(\"Evaluation passed\")\n",
    "\n",
    "            loss, mae, mse = model.evaluate(normed_test_data, test_labels, verbose=0)\n",
    "            with open('models.csv', 'a') as modelsf:\n",
    "                modelsf.write('\"%s_%d\",%g,%g\\n' % (name, seed, mae, mse,))\n",
    "            model.save(f'{name}_{seed}.h5')\n",
    "            results.append({\"loss\":loss, \"mae\":mae, \"mse\":mse, \"a\":a, \"nn\":nn, \"l\":l})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "outputs": [],
   "source": [
    "result"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "outputs": [],
   "source": [
    "maxPricedItem = min(results, key=lambda x:x['mse'])"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "maxPricedItem = min(results, key=lambda x:x['mse'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [],
   "name": "crystalipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}